# project: cjgn20e3o4i1w0105pjn3t5p6
# version: 26

type AuthenticateUserPayload @model {
  id: ID! @isUnique
  userId: String!
  token: String!
}

type User @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String @isUnique
  auth0UserId: String @isUnique
  password: String
  name: String
  persons: [Person!]! @relation(name: "UsersPersons")
  expenses: [Expense!]! @relation(name: "UsersExpenses")
  opportunities: [Opportunity!]! @relation(name: "UserOpportunities")
  vendors: [Vendor!]! @relation(name: "UserOnVendor")
  incomes: [Income!]! @relation(name: "UserOnIncome")
  recipes: [Recipe!]! @relation(name: "UsersRecipes")
  shoppingLists: [ShoppingList!]! @relation(name: "UsersShoppingLists")
}

type File @model {
  contentType: String!
  createdAt: DateTime!
  id: ID! @isUnique
  name: String!
  secret: String! @isUnique
  size: Int!
  updatedAt: DateTime!
  url: String! @isUnique
}

type Person @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  firstName: String
  lastName: String
  displayName: String
  email: String
  phone1: String
  phone2: String
  phoneTag1: String
  phoneTag2: String
  ownedBy: User @relation(name: "UsersPersons")
  opportunities: [Opportunity!]! @relation(name: "PersonOpportunities")
}

type Opportunity @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  jobName: String
  stage: String
  status: String
  amount: Float
  source: String
  estimatedCloseDate: DateTime
  probability: Int
  nextStep: String
  description: String
  contacts: [Person!]! @relation(name: "PersonOpportunities")
  ownedBy: User @relation(name: "UserOpportunities")
}

type Expense @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  amount: Float
  category: String
  description: String
  date: DateTime
  vendor: Vendor @relation(name: "VendorOnExpense")
  ownedBy: User @relation(name: "UsersExpenses")
}

type Income @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  amount: Float
  category: String
  description: String
  date: DateTime!
  vendor: Vendor @relation(name: "VendorOnIncome")
  ownedBy: User! @relation(name: "UserOnIncome")
}

type Vendor @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String
  income: Income @relation(name: "VendorOnIncome")
  expense: Expense @relation(name: "VendorOnExpense")
  ownedBy: User @relation(name: "UserOnVendor")
}

type Product @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  inCart: Boolean
  quantity: Float
  shoppingList: ShoppingList @relation(name: "ProductsOnList")
  recipe: Recipe @relation(name: "ProductsOnRecipe")
  template: ProductTemplate @relation(name: "ProductTemplateOnProduct")
}

type ProductTemplate @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String
  price: Float
  category: String
  unit: String
  products: [Product!]! @relation(name: "ProductTemplateOnProduct")
}

type Recipe @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String
  steps: [String!]
  notes: String
  rating: Float
  ingredients: [Product!]! @relation(name: "ProductsOnRecipe")
  ownedBy: User @relation(name: "UsersRecipes")
}

type ShoppingList @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String
  products: [Product!]! @relation(name: "ProductsOnList")
  ownedBy: User @relation(name: "UsersShoppingLists")
}